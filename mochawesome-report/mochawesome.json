{
  "stats": {
    "suites": 5,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2022-02-22T13:09:42.727Z",
    "end": "2022-02-22T13:11:15.979Z",
    "duration": 93252,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6f666c5b-5132-4fcf-804f-6b76ea0c98ed",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "19c83e4e-79ae-419f-acf1-fe60d0f7d9a6",
          "title": "Store inventory should have status code 200",
          "fullFile": "C:\\Users\\UC264228\\Learning\\api\\API-tests-with-axios\\test\\petStoreTests.spec.js",
          "file": "\\test\\petStoreTests.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should have status code 200",
              "fullTitle": "Store inventory should have status code 200 Should have status code 200",
              "timedOut": false,
              "duration": 945,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let statusCode = await ApiHelper.getStatusCode(testData.urls.storeInventory);\nexpect(statusCode).to.equal(200);",
              "err": {},
              "uuid": "7ea77b02-3749-4d2e-8e3f-203bbfea129d",
              "parentUUID": "19c83e4e-79ae-419f-acf1-fe60d0f7d9a6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7ea77b02-3749-4d2e-8e3f-203bbfea129d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 945,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "17e347dd-55f8-43bf-b97b-48846301b565",
          "title": "Should return 404 when an invalid id is passed",
          "fullFile": "C:\\Users\\UC264228\\Learning\\api\\API-tests-with-axios\\test\\petStoreTests.spec.js",
          "file": "\\test\\petStoreTests.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should display an error message",
              "fullTitle": "Should return 404 when an invalid id is passed Should display an error message",
              "timedOut": false,
              "duration": 796,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = await ApiHelper.getById(testData.urls.pet, 'blah');\nexpect(response.message).to.equal('Request failed with status code 404');",
              "err": {},
              "uuid": "4e56e998-2eff-407c-9ac7-7cf93160bdd2",
              "parentUUID": "17e347dd-55f8-43bf-b97b-48846301b565",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4e56e998-2eff-407c-9ac7-7cf93160bdd2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 796,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "42ba895c-b1c4-46e1-89a0-86f2f0a89301",
          "title": "Should find pets by a valid status",
          "fullFile": "C:\\Users\\UC264228\\Learning\\api\\API-tests-with-axios\\test\\petStoreTests.spec.js",
          "file": "\\test\\petStoreTests.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should find pets by a valid status",
              "fullTitle": "Should find pets by a valid status Should find pets by a valid status",
              "timedOut": false,
              "duration": 787,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let status = CommonHelper.provideRandomValFromArr(testData.petStatus);\nlet response = await ApiHelper.findByQueryParameter(testData.urls.findByStatus, 'status', status);\nawait console.log(response.data[0].status);\nlet resultStatuses = await CommonHelper.findProperties('status', response);\nexpect(resultStatuses.length).to.equal(1);\nexpect(resultStatuses[0]).to.equal(status);",
              "err": {},
              "uuid": "2f837246-c50c-4f8e-b773-296b9d242d96",
              "parentUUID": "42ba895c-b1c4-46e1-89a0-86f2f0a89301",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2f837246-c50c-4f8e-b773-296b9d242d96"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 787,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "e5267620-5148-406f-80f8-09b27b349dbe",
          "title": "Should be able to add a new pet",
          "fullFile": "C:\\Users\\UC264228\\Learning\\api\\API-tests-with-axios\\test\\petStoreTests.spec.js",
          "file": "\\test\\petStoreTests.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to add a pet",
              "fullTitle": "Should be able to add a new pet Should be able to add a pet",
              "timedOut": false,
              "duration": 11596,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "testData.newPet.id = newPetId;\nawait ApiHelper.postAnEntry(testData.urls.pet, testData.newPet);\nlet response = await ApiHelper.getWithRetry(testData.urls.pet, testData.newPet.id, 10, 10000);\nexpect(JSON.stringify(response.data)).to.equal(JSON.stringify(testData.newPet));",
              "err": {},
              "uuid": "c1a28492-4057-4c7a-b29d-4ef2eec55f41",
              "parentUUID": "e5267620-5148-406f-80f8-09b27b349dbe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c1a28492-4057-4c7a-b29d-4ef2eec55f41"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11596,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "8e0b4817-954b-489f-9dc3-ff02933ce619",
          "title": "Should be able to delete a pet",
          "fullFile": "C:\\Users\\UC264228\\Learning\\api\\API-tests-with-axios\\test\\petStoreTests.spec.js",
          "file": "\\test\\petStoreTests.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to delete a pet",
              "fullTitle": "Should be able to delete a pet Should be able to delete a pet",
              "timedOut": false,
              "duration": 79115,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let responseBefore = await ApiHelper.getWithRetry(testData.urls.pet, newPetId, 10, 10000);\nawait ApiHelper.deletewithRetry(testData.urls.pet, newPetId, testData.config, 10, 5000);\nlet responseAfter = await ApiHelper.getById(testData.urls.pet, newPetId);\nexpect(responseBefore.data.id).to.equal(newPetId);\nexpect(responseAfter.response.data.message).to.equal('Pet not found');",
              "err": {},
              "uuid": "ce71f8a9-3921-4086-8f29-9fc65066285b",
              "parentUUID": "8e0b4817-954b-489f-9dc3-ff02933ce619",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ce71f8a9-3921-4086-8f29-9fc65066285b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 79115,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": null,
      "version": "6.0.1"
    }
  }
}