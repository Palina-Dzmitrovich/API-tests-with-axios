{
  "stats": {
    "suites": 4,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2022-02-17T10:44:56.403Z",
    "end": "2022-02-17T10:45:02.349Z",
    "duration": 5946,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "97b21f9d-1de9-41e6-972a-09346f5448d0",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bc3babfc-ce3f-4d56-985b-44e5d94633c0",
          "title": "Store inventory should have status code 200",
          "fullFile": "C:\\Users\\UC264228\\Learning\\api\\API-tests-with-axios\\test\\petStoreTests.spec.js",
          "file": "\\test\\petStoreTests.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should have status code 200",
              "fullTitle": "Store inventory should have status code 200 Should have status code 200",
              "timedOut": false,
              "duration": 587,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let statusCode = await ApiHelper.getStatusCode(testData.urls.storeInventory);\nexpect(statusCode).to.equal(200);",
              "err": {},
              "uuid": "5ff5d4ac-0e8a-4baf-8a1f-b768a1823356",
              "parentUUID": "bc3babfc-ce3f-4d56-985b-44e5d94633c0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5ff5d4ac-0e8a-4baf-8a1f-b768a1823356"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 587,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "a44f4df2-dc65-46f1-ad0f-40647b1a445c",
          "title": "Should return 404 when an invalid id is passed",
          "fullFile": "C:\\Users\\UC264228\\Learning\\api\\API-tests-with-axios\\test\\petStoreTests.spec.js",
          "file": "\\test\\petStoreTests.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should display an error message",
              "fullTitle": "Should return 404 when an invalid id is passed Should display an error message",
              "timedOut": false,
              "duration": 416,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = await ApiHelper.getById(testData.urls.pet, 'blah');\nexpect(response.message).to.equal('Request failed with status code 404');",
              "err": {},
              "uuid": "fb52c02c-cf15-4d7c-a8fa-ae67d35405a2",
              "parentUUID": "a44f4df2-dc65-46f1-ad0f-40647b1a445c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fb52c02c-cf15-4d7c-a8fa-ae67d35405a2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 416,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "f54b7bc0-2c0f-46a2-91c2-3e6721280fa6",
          "title": "Should find pets by a valid status",
          "fullFile": "C:\\Users\\UC264228\\Learning\\api\\API-tests-with-axios\\test\\petStoreTests.spec.js",
          "file": "\\test\\petStoreTests.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should find pets by a valid status",
              "fullTitle": "Should find pets by a valid status Should find pets by a valid status",
              "timedOut": false,
              "duration": 1153,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let status = provideRandomVal(testData.petStatus);\nlet response = await ApiHelper.findByQueryParameter(testData.urls.findByStatus, 'status', status);\nawait console.log(response.data[0].status);\nlet resultStatuses = await CommonHelper.findProperties('status', response);\nexpect(resultStatuses.length).to.equal(1);\nexpect(resultStatuses[0]).to.equal(status);",
              "err": {},
              "uuid": "3b208f26-eab6-44d1-a66b-443b1a049cb6",
              "parentUUID": "f54b7bc0-2c0f-46a2-91c2-3e6721280fa6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3b208f26-eab6-44d1-a66b-443b1a049cb6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1153,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "4f024878-c9ea-485a-ad7c-f02035286b63",
          "title": "Sould be able to add a new pet",
          "fullFile": "C:\\Users\\UC264228\\Learning\\api\\API-tests-with-axios\\test\\petStoreTests.spec.js",
          "file": "\\test\\petStoreTests.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to add a pet",
              "fullTitle": "Sould be able to add a new pet Should be able to add a pet",
              "timedOut": false,
              "duration": 3777,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await ApiHelper.postANewPet(testData.urls.pet, newPet);\nawait CommonHelper.wait(3000);\nlet response = await ApiHelper.getById(testData.urls.pet, newPet.id);\nexpect(JSON.stringify(response.data)).to.equal(JSON.stringify(newPet));",
              "err": {},
              "uuid": "7e6d0e21-9c76-4dc2-a59d-2f71b0377d6f",
              "parentUUID": "4f024878-c9ea-485a-ad7c-f02035286b63",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7e6d0e21-9c76-4dc2-a59d-2f71b0377d6f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3777,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": null,
      "version": "6.0.1"
    }
  }
}